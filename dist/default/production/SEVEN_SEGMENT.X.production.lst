

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 24 18:12:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 02/02/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  0787                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F879
   173  0787  343F               	retlw	63
   174  0788  3406               	retlw	6
   175  0789  345B               	retlw	91
   176  078A  344F               	retlw	79
   177  078B  3466               	retlw	102
   178  078C  346D               	retlw	109
   179  078D  347D               	retlw	125
   180  078E  3407               	retlw	7
   181  078F  347F               	retlw	127
   182  0790  346F               	retlw	111
   183  0007                     _PORTC	set	7
   184  0087                     _TRISC	set	135
   185                           
   186                           	psect	cinit
   187  07EE                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07EE                     __initialization:
   191                           
   192                           ; Initialize objects allocated to BANK0
   193  07EE  1383               	bcf	3,7	;select IRP bank0
   194  07EF  3036               	movlw	low (__pdataBANK0+10)
   195  07F0  00FD               	movwf	btemp+-1
   196  07F1  3007               	movlw	high __pidataBANK0
   197  07F2  00FE               	movwf	btemp
   198  07F3  3087               	movlw	low __pidataBANK0
   199  07F4  00FF               	movwf	btemp+1
   200  07F5  302C               	movlw	low __pdataBANK0
   201  07F6  0084               	movwf	4
   202  07F7  120A  118A  2795  120A  118A  	fcall	init_ram0
   203  07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206  07FC                     __end_of__initialization:
   207  07FC  0183               	clrf	3
   208  07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	dataBANK0
   211  002C                     __pdataBANK0:
   212  002C                     main@F879:
   213  002C                     	ds	10
   214                           
   215                           	psect	inittext
   216  0791                     init_fetch0:	
   217                           ;	Called with low address in FSR and high address in W
   218                           
   219  0791  087E               	movf	btemp,w
   220  0792  008A               	movwf	10
   221  0793  087F               	movf	btemp+1,w
   222  0794  0082               	movwf	2
   223  0795                     init_ram0:	
   224                           ;Called with:
   225                           ;	high address of idata address in btemp 
   226                           ;	low address of idata address in btemp+1 
   227                           ;	low address of data in FSR
   228                           ;	high address + 1 of data in btemp-1
   229                           
   230  0795  120A  118A  2791  120A  118A  	fcall	init_fetch0
   231  079A  0080               	movwf	0
   232  079B  0A84               	incf	4,f
   233  079C  0804               	movf	4,w
   234  079D  067D               	xorwf	btemp+-1,w
   235  079E  1903               	btfsc	3,2
   236  079F  3400               	retlw	0
   237  07A0  0AFF               	incf	btemp+1,f
   238  07A1  1903               	btfsc	3,2
   239  07A2  0AFE               	incf	btemp,f
   240  07A3  2F95               	goto	init_ram0
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_main:
   245  0070                     ??_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250  0070                     	ds	4
   251                           
   252                           	psect	cstackBANK0
   253  0020                     __pcstackBANK0:
   254  0020                     main@seg_code:
   255                           
   256                           ; 10 bytes @ 0x0
   257  0020                     	ds	10
   258  002A                     main@i:
   259                           
   260                           ; 2 bytes @ 0xA
   261  002A                     	ds	2
   262                           
   263                           	psect	maintext
   264  07A4                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 18 in file "RUNNING.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  i               2   10[BANK0 ] int 
   275 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   276 ;; Return value:  Size  Location     Type
   277 ;;                  1    wreg      void 
   278 ;; Registers used:
   279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   280 ;; Tracked objects:
   281 ;;		On entry : B00/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   285 ;;      Params:         0       0       0       0       0
   286 ;;      Locals:         0      12       0       0       0
   287 ;;      Temps:          4       0       0       0       0
   288 ;;      Totals:         4      12       0       0       0
   289 ;;Total ram usage:       16 bytes
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           
   298                           ;psect for function _main
   299  07A4                     _main:
   300  07A4                     l628:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   303                           
   304                           
   305                           ;RUNNING.c: 20:  char seg_code[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
   306  07A4  3020               	movlw	main@seg_code& (0+255)
   307  07A5  0084               	movwf	4
   308  07A6  302C               	movlw	low main@F879
   309  07A7  00F0               	movwf	??_main
   310  07A8  0804               	movf	4,w
   311  07A9  00F1               	movwf	??_main+1
   312  07AA  300A               	movlw	10
   313  07AB  00F2               	movwf	??_main+2
   314  07AC                     u30:
   315  07AC  0870               	movf	??_main,w
   316  07AD  0084               	movwf	4
   317  07AE  1383               	bcf	3,7	;select IRP bank0
   318  07AF  0800               	movf	0,w
   319  07B0  00F3               	movwf	??_main+3
   320  07B1  0AF0               	incf	??_main,f
   321  07B2  0871               	movf	??_main+1,w
   322  07B3  0084               	movwf	4
   323  07B4  0873               	movf	??_main+3,w
   324  07B5  0080               	movwf	0
   325  07B6  0AF1               	incf	??_main+1,f
   326  07B7  0BF2               	decfsz	??_main+2,f
   327  07B8  2FAC               	goto	u30
   328  07B9                     l630:
   329                           
   330                           ;RUNNING.c: 23:     TRISC=0x00;
   331  07B9  1683               	bsf	3,5	;RP0=1, select bank1
   332  07BA  1303               	bcf	3,6	;RP1=0, select bank1
   333  07BB  0187               	clrf	7	;volatile
   334  07BC                     l632:
   335                           
   336                           ;RUNNING.c: 26:     {;RUNNING.c: 27:            int i;;RUNNING.c: 29:         for (i = 0
      +                          ; i <= 9; i++)
   337  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   338  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   339  07BE  01AA               	clrf	main@i
   340  07BF  01AB               	clrf	main@i+1
   341  07C0                     l638:
   342                           
   343                           ;RUNNING.c: 30:         {;RUNNING.c: 31:             PORTC = seg_code[i];
   344  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   345  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   346  07C2  082A               	movf	main@i,w
   347  07C3  3E20               	addlw	(low (main@seg_code| 0))& (0+255)
   348  07C4  0084               	movwf	4
   349  07C5  1383               	bcf	3,7	;select IRP bank0
   350  07C6  0800               	movf	0,w
   351  07C7  0087               	movwf	7	;volatile
   352  07C8                     l640:
   353                           
   354                           ;RUNNING.c: 33:             _delay((unsigned long)((100)*(8000000/4000.0)));
   355  07C8  3002               	movlw	2
   356  07C9  00F2               	movwf	??_main+2
   357  07CA  3004               	movlw	4
   358  07CB  00F1               	movwf	??_main+1
   359  07CC  30BA               	movlw	186
   360  07CD  00F0               	movwf	??_main
   361  07CE                     u57:
   362  07CE  0BF0               	decfsz	??_main,f
   363  07CF  2FCE               	goto	u57
   364  07D0  0BF1               	decfsz	??_main+1,f
   365  07D1  2FCE               	goto	u57
   366  07D2  0BF2               	decfsz	??_main+2,f
   367  07D3  2FCE               	goto	u57
   368  07D4  0000               	nop
   369  07D5                     l642:
   370                           
   371                           ;RUNNING.c: 34:         }
   372  07D5  3001               	movlw	1
   373  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   374  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   375  07D8  07AA               	addwf	main@i,f
   376  07D9  1803               	skipnc
   377  07DA  0AAB               	incf	main@i+1,f
   378  07DB  3000               	movlw	0
   379  07DC  07AB               	addwf	main@i+1,f
   380  07DD                     l644:
   381  07DD  082B               	movf	main@i+1,w
   382  07DE  3A80               	xorlw	128
   383  07DF  00FF               	movwf	btemp+1
   384  07E0  3080               	movlw	128
   385  07E1  027F               	subwf	btemp+1,w
   386  07E2  1D03               	skipz
   387  07E3  2FE6               	goto	u45
   388  07E4  300A               	movlw	10
   389  07E5  022A               	subwf	main@i,w
   390  07E6                     u45:
   391  07E6  1C03               	skipc
   392  07E7  2FE9               	goto	u41
   393  07E8  2FEA               	goto	u40
   394  07E9                     u41:
   395  07E9  2FC0               	goto	l638
   396  07EA                     u40:
   397  07EA  2FBC               	goto	l632
   398  07EB  120A  118A  2800   	ljmp	start
   399  07EE                     __end_of_main:
   400  007E                     btemp	set	126	;btemp
   401  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0      92
                                              0 COMMON     4     4      0
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 24 18:12:09 2021

                      pc 0002                       u30 07AC                       u40 07EA  
                     u41 07E9                       u45 07E6                       u57 07CE  
                     fsr 0004                      l630 07B9                      l640 07C8  
                    l632 07BC                      l642 07D5                      l644 07DD  
                    l628 07A4                      l638 07C0                      fsr0 0004  
                    indf 0000                     _main 07A4                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTC 0007  
                  _TRISC 0087             main@seg_code 0020                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0787  
             __pmaintext 07A4     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0791              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020            __size_of_main 004A                 main@F879 002C  
               init_ram0 0795  
